import numpy as np
import matplotlib as plt
#from functions import *
import time 
from functools import reduce

#@timer
def P101():
	'''
	If we are presented with the first  terms of a sequence it is impossible 
	to say with certainty the value of the next term, as there are infinitely
	 many polynomial functions that can model the sequence.

	As an example, let us consider the sequence of cube numbers. This is defined 
	by the generating function,
	: 

	Suppose we were only given the first two terms of this sequence. Working 
	on the principle that "simple is best" we should assume a linear relationship
	 and predict the next term to be  (common difference ). Even if we were 
	 presented with the first three terms, by the same principle of simplicity,
	  a quadratic relationship should be assumed.

	We shall define  to be the th term of the optimum polynomial generating 
	function for the first  terms of a sequence. It should be clear that  will 
	accurately generate the terms of the sequence for , and potentially the first
	 incorrect term (FIT) will be ; in which case we shall call it a bad OP (BOP).

	As a basis, if we were only given the first term of sequence, it would be 
	most sensible to assume constancy; that is, for , .

	Hence we obtain the following s for the cubic sequence:

	     	
	Clearly no BOPs exist for .

	By considering the sum of FITs generated by the BOPs (indicated in red above)
	, we obtain .

	Consider the following tenth degree polynomial generating function:

	Find the sum of FITs for the BOPs.
	'''
	def poly(x, N): return np.sum(np.array([ (-1)**n * x**n for n in range(N+1) ]), axis=0)

	def coef(yc):
		yy = yc[1:] - yc[:-1]
		if yy.shape[0] > 1:	ans = coef(yy)
		else:				return yy[0]+yc[-1]
		return ans + yc[-1]

	N = 10
	X_p = np.arange(1, N+2)
	Y_p = poly(X_p, N)
	suma = 1

	for D in range(2, 11):
		x = X_p[:D]
		y = Y_p[:D]
		z = np.polyfit(x, y, D-1)
		suma += int(np.polyval(z, D+1)+0.1) 

	suma = 1 
	for D in range(2, 11):
		x = X_p[:D]
		y = Y_p[:D]	
		suma += coef(y)
 
	return suma

P101()