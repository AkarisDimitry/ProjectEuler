from functions import *
import time
from decimal import *
import itertools 

@timer
def P43(N=1000000, v=False): 
	'''

	Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. 
	The first ten pentagonal numbers are:

	1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

	It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their 
	difference, 70 − 22 = 48, is not pentagonal.

	Find the pair of pentagonal numbers, Pj and Pk, for which their 
	sum and difference are pentagonal and D = |Pk − Pj| is minimised; 
	what is the value of D?
	'''
	n = np.arange(1,N,1, dtype=np.int64)
	P = n*(3*n-1)/2

	# 3/2 x**2 - 1/2 x
	# 3/2 x**2 + 3 xy - 1/2 x + 3/2 y**2 - 1/2 y

	# Pi - Pj = 3 xy + 3/2 y**2 - 1/2 y
	# Pi + Pj = 3 x**2 + 3 xy - x + 3/2 y**2 - 1/2 y
	n1 = np.arange(1,N,1, dtype=np.int64)
	n2 = np.arange(1,N,1, dtype=np.int64)
	n1, n2 = np.meshgrid(n1, n2, indexing='xy')

	Ps = 3*n1*n2 + 3/2*n2**2 - 1/2*n2
	Pd = 3*n1**2 + 3*n1*n2 - n1 + 3/2*n2**2 - 0.5*n2

	mask = np.logical_and(np.isin(Ps, P), np.isin(Pd, P))

	n1 = n1[mask][0]
	n2 = n2[mask][0]

	return P[n1+n2-1]-P[n1-1] 

P43( N=2500 ) 